.App {
  text-align: center;
}

.App-logo {
  height: 40vmin;
  pointer-events: none;
}

@media (prefers-reduced-motion: no-preference) {
  .App-logo {
    animation: App-logo-spin infinite 20s linear;
  }
}

.App-header {
  background-color: #282c34;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  font-size: calc(10px + 2vmin);
  color: white;
}

.App-link {
  color: #61dafb;
}

@keyframes App-logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

.profile {
  
  width: 300px;
  text-align: center;
  padding: 1rem;
  background-color: #f7f5eef2;
  border-radius: 20px;
  margin-bottom: 1rem;
  box-shadow: 11px 14px 27px -6px rgba(82,75,75,0.77);
  -webkit-box-shadow: 11px 14px 27px -6px rgba(82,75,75,0.77);
  -moz-box-shadow: 11px 14px 27px -6px rgba(82,75,75,0.77);;
}

.photo {
  width: 200px;
  height: 200px;
  border-radius: 100%;
}

/* new의 부모 컨테이너를 profile로 했었기 때문에 Avatar 컴포넌트만 그렸을 때 원하는대로 나타나지 않으므로, new의 부모 컨테이너를 avatar로 지정하고 Avatar 컴포넌트에 avatar를 클래스네임으로 하는 div를 만들어서 사진과 new의 위치가 항상 동일하도록 맞춰줌 */
.avatar {
  position: relative;
  width: 200px;
  height: 200px;
  margin: auto;
}

.new {
  /* 부모 컨테이너로 지정할 클래스에 position: relative;를 줌으로써 new의 위치를 상대적으로 조정 */
  position: absolute;  
   /* left와 top은 부모 엘리먼트의 70%, 부모의 10%의 위치를 의미하게됨.*/
  left: 70%;
  top: 10%;
  background-color: aquamarine;
  padding: 0.2rem 0.5rem;
  border-radius: 0.5rem;
  font-weight: bold;
}